{"version":3,"sources":["../../src/core/Plugin.js"],"names":["preact","require","findDOMElement","debounce","fn","calling","latestArgs","args","resolve","then","module","exports","uppy","opts","update","bind","mount","install","uninstall","getPluginState","getState","plugins","id","setPluginState","setState","state","el","_updateUI","target","plugin","callerPluginName","targetElement","isTargetDOMEl","rerender","getPlugin","render","log","replaceTargetContent","innerHTML","targetPlugin","Plugin","Target","iteratePlugins","targetPluginName","addTarget","Error","unmount","parentNode","removeChild"],"mappings":"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","file":"Plugin.js","sourcesContent":["const preact = require('preact')\nconst findDOMElement = require('../utils/findDOMElement')\n\n/**\n * Defer a frequent call to the microtask queue.\n */\nfunction debounce (fn) {\n  let calling = null\n  let latestArgs = null\n  return (...args) => {\n    latestArgs = args\n    if (!calling) {\n      calling = Promise.resolve().then(() => {\n        calling = null\n        // At this point `args` may be different from the most\n        // recent state, if multiple calls happened since this task\n        // was queued. So we use the `latestArgs`, which definitely\n        // is the most recent call.\n        return fn(...latestArgs)\n      })\n    }\n    return calling\n  }\n}\n\n/**\n * Boilerplate that all Plugins share - and should not be used\n * directly. It also shows which methods final plugins should implement/override,\n * this deciding on structure.\n *\n * @param {object} main Uppy core object\n * @param {object} object with plugin options\n * @return {array | string} files or success/fail message\n */\nmodule.exports = class Plugin {\n  constructor (uppy, opts) {\n    this.uppy = uppy\n    this.opts = opts || {}\n\n    this.update = this.update.bind(this)\n    this.mount = this.mount.bind(this)\n    this.install = this.install.bind(this)\n    this.uninstall = this.uninstall.bind(this)\n  }\n\n  getPluginState () {\n    const { plugins } = this.uppy.getState()\n    return plugins[this.id]\n  }\n\n  setPluginState (update) {\n    const plugins = Object.assign({}, this.uppy.getState().plugins)\n    plugins[this.id] = Object.assign({}, plugins[this.id], update)\n\n    this.uppy.setState({\n      plugins: plugins\n    })\n  }\n\n  update (state) {\n    if (typeof this.el === 'undefined') {\n      return\n    }\n\n    if (this._updateUI) {\n      this._updateUI(state)\n    }\n  }\n\n  /**\n   * Check if supplied `target` is a DOM element or an `object`.\n   * If it’s an object — target is a plugin, and we search `plugins`\n   * for a plugin with same name and return its target.\n   *\n   * @param {String|Object} target\n   *\n   */\n  mount (target, plugin) {\n    const callerPluginName = plugin.id\n\n    const targetElement = findDOMElement(target)\n\n    if (targetElement) {\n      this.isTargetDOMEl = true\n\n      // API for plugins that require a synchronous rerender.\n      this.rerender = (state) => {\n        // plugin could be removed, but this.rerender is debounced below,\n        // so it could still be called even after uppy.removePlugin or uppy.close\n        // hence the check\n        if (!this.uppy.getPlugin(this.id)) return\n        this.el = preact.render(this.render(state), targetElement, this.el)\n      }\n      this._updateUI = debounce(this.rerender)\n\n      this.uppy.log(`Installing ${callerPluginName} to a DOM element`)\n\n      // clear everything inside the target container\n      if (this.opts.replaceTargetContent) {\n        targetElement.innerHTML = ''\n      }\n\n      this.el = preact.render(this.render(this.uppy.getState()), targetElement)\n\n      return this.el\n    }\n\n    let targetPlugin\n    if (typeof target === 'object' && target instanceof Plugin) {\n      // Targeting a plugin *instance*\n      targetPlugin = target\n    } else if (typeof target === 'function') {\n      // Targeting a plugin type\n      const Target = target\n      // Find the target plugin instance.\n      this.uppy.iteratePlugins((plugin) => {\n        if (plugin instanceof Target) {\n          targetPlugin = plugin\n          return false\n        }\n      })\n    }\n\n    if (targetPlugin) {\n      const targetPluginName = targetPlugin.id\n      this.uppy.log(`Installing ${callerPluginName} to ${targetPluginName}`)\n      this.el = targetPlugin.addTarget(plugin)\n      return this.el\n    }\n\n    this.uppy.log(`Not installing ${callerPluginName}`)\n    throw new Error(`Invalid target option given to ${callerPluginName}`)\n  }\n\n  render (state) {\n    throw (new Error('Extend the render method to add your plugin to a DOM element'))\n  }\n\n  addTarget (plugin) {\n    throw (new Error('Extend the addTarget method to add your plugin to another plugin\\'s target'))\n  }\n\n  unmount () {\n    if (this.isTargetDOMEl && this.el && this.el.parentNode) {\n      this.el.parentNode.removeChild(this.el)\n    }\n  }\n\n  install () {\n\n  }\n\n  uninstall () {\n    this.unmount()\n  }\n}\n"]}