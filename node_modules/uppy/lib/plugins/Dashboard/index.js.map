{"version":3,"sources":["../../../src/plugins/Dashboard/index.js"],"names":["Plugin","require","Translator","dragDrop","DashboardUI","StatusBar","Informer","ThumbnailGenerator","findAllDOMElements","toArray","prettyBytes","defaultTabIcon","FOCUSABLE_ELEMENTS","TAB_KEY","ESC_KEY","module","exports","uppy","opts","id","title","type","modalName","defaultLocale","strings","selectToUpload","closeModal","upload","importFrom","dashboardWindowTitle","dashboardTitle","copyLinkToClipboardSuccess","copyLinkToClipboardFallback","copyLink","fileSource","done","name","removeFile","editFile","editing","finishEditingFile","saveChanges","cancel","localDisk","myDevice","dropPasteImport","dropPaste","browse","fileProgress","numberOfSelectedFiles","uploadAllNewFiles","emptyFolderAdded","uploadComplete","resumeUpload","pauseUpload","retryUpload","uploadXFiles","uploadXNewFiles","folderAdded","defaultOptions","target","metaFields","trigger","inline","width","height","thumbnailWidth","showLinkToFileUploadResult","showProgressDetails","hideUploadButton","hideRetryButton","hidePauseResumeCancelButtons","hideProgressAfterFinish","note","closeModalOnClickOutside","disableStatusBar","disableInformer","disableThumbnailGenerator","disablePageScrollWhenModalOpen","animateOpenClose","proudlyDisplayPoweredByUppy","onRequestCloseModal","locale","browserBackButtonClose","translator","i18n","translate","bind","i18nArray","translateArray","openModal","requestCloseModal","isModalOpen","addTarget","removeTarget","hideAllPanels","showPanel","getFocusableNodes","setFocusToFirstNode","handlePopState","maintainFocus","initEvents","onKeydown","handleClickOutside","toggleFileCard","handleDrop","handlePaste","handleInputChange","updateDashboardElWidth","render","install","plugin","pluginState","getPluginState","newTargets","targets","filter","setPluginState","callerPluginId","constructor","callerPluginName","callerPluginType","msg","log","state","slice","push","el","activePanel","nodes","querySelectorAll","Object","keys","map","key","focusableNodes","length","focus","updateBrowserHistory","history","pushState","window","addEventListener","event","manualClose","go","setFocusToBrowse","browseBtn","querySelector","focusedItemIndex","indexOf","document","activeElement","shiftKey","preventDefault","isHidden","savedScrollPosition","scrollY","savedActiveElement","body","classList","add","rerender","getState","remove","isClosing","handler","removeEventListener","keyCode","ev","files","clipboardData","items","forEach","file","kind","blob","getAsFile","info","addFile","source","data","err","showModalTrigger","removeDragDropListener","on","removeEvents","off","dashboardEl","offsetWidth","containerWidth","fileId","fileCardFor","capabilities","newFiles","progress","uploadStarted","inProgressFiles","isPaused","inProgressFilesArray","totalSize","totalUploadedSize","bytesTotal","bytesUploaded","attachRenderFunctionToTarget","getPlugin","icon","isSupported","acquirers","progressindicators","startUpload","catch","stack","message","cancelUpload","fileID","emit","saveFileCard","meta","setFileMeta","modal","totalFileCount","totalProgress","autoProceed","resumableUploads","bundled","pauseResume","currentWidth","isWide","isTargetDOMEl","allowedFileTypes","restrictions","maxNumberOfFiles","discoverProviderPlugins","iteratePlugins","showFileCard","mount","plugins","pluginID","use","hideAfterFinish","uninstall","informer","removePlugin","statusBar","thumbnail","unmount"],"mappings":";;;;;;;;AAAA,IAAMA,SAASC,QAAQ,mBAAR,CAAf;AACA,IAAMC,aAAaD,QAAQ,uBAAR,CAAnB;AACA,IAAME,WAAWF,QAAQ,WAAR,CAAjB;AACA,IAAMG,cAAcH,QAAQ,aAAR,CAApB;AACA,IAAMI,YAAYJ,QAAQ,cAAR,CAAlB;AACA,IAAMK,WAAWL,QAAQ,aAAR,CAAjB;AACA,IAAMM,qBAAqBN,QAAQ,uBAAR,CAA3B;AACA,IAAMO,qBAAqBP,QAAQ,gCAAR,CAA3B;AACA,IAAMQ,UAAUR,QAAQ,qBAAR,CAAhB;AACA,IAAMS,cAAcT,QAAQ,gBAAR,CAApB;;eAC2BA,QAAQ,SAAR,C;IAAnBU,c,YAAAA,c;;AAER;AACA;AACA;;;AACA,IAAMC,qBAAqB,CACzB,8DADyB,EAEzB,iEAFyB,EAGzB,uDAHyB,EAIzB,wDAJyB,EAKzB,0DALyB,EAMzB,wDANyB,EAOzB,6DAPyB,EAQzB,6DARyB,EASzB,4DATyB,EAUzB,wEAVyB,EAWzB,iEAXyB,CAA3B;;AAcA,IAAMC,UAAU,CAAhB;AACA,IAAMC,UAAU,EAAhB;;AAEA;;;AAGAC,OAAOC,OAAP;AAAA;;AACE,qBAAaC,IAAb,EAAmBC,IAAnB,EAAyB;AAAA;;AAAA,iDACvB,mBAAMD,IAAN,EAAYC,IAAZ,CADuB;;AAEvB,UAAKC,EAAL,GAAU,MAAKD,IAAL,CAAUC,EAAV,IAAgB,WAA1B;AACA,UAAKC,KAAL,GAAa,WAAb;AACA,UAAKC,IAAL,GAAY,cAAZ;AACA,UAAKC,SAAL,GAAiB,gBAAjB;;AAEA,QAAMC,gBAAgB;AACpBC,eAAS;AACPC,wBAAgB,wBADT;AAEPC,oBAAY,aAFL;AAGPC,gBAAQ,QAHD;AAIPC,oBAAY,qBAJL;AAKPC,8BAAsB,+CALf;AAMPC,wBAAgB,gBANT;AAOPC,oCAA4B,0BAPrB;AAQPC,qCAA6B,oBARtB;AASPC,kBAAU,WATH;AAUPC,oBAAY,sBAVL;AAWPC,cAAM,MAXC;AAYPC,cAAM,MAZC;AAaPC,oBAAY,aAbL;AAcPC,kBAAU,WAdH;AAePC,iBAAS,iBAfF;AAgBPC,2BAAmB,qBAhBZ;AAiBPC,qBAAa,cAjBN;AAkBPC,gBAAQ,QAlBD;AAmBPC,mBAAW,YAnBJ;AAoBPC,kBAAU,WApBH;AAqBPC,yBAAiB,6EArBV;AAsBPC,mBAAW,qCAtBJ;AAuBPC,gBAAQ,QAvBD;AAwBPC,sBAAc,qCAxBP;AAyBPC,+BAAuB,0BAzBhB;AA0BPC,2BAAmB,sBA1BZ;AA2BPC,0BAAkB,uCA3BX;AA4BPC,wBAAgB,iBA5BT;AA6BPC,sBAAc,eA7BP;AA8BPC,qBAAa,cA9BN;AA+BPC,qBAAa,cA/BN;AAgCPC,sBAAc;AACZ,aAAG,4BADS;AAEZ,aAAG;AAFS,SAhCP;AAoCPC,yBAAiB;AACf,aAAG,6BADY;AAEf,aAAG;AAFY,SApCV;AAwCPC,qBAAa;AACX,aAAG,0CADQ;AAEX,aAAG;AAFQ;AAxCN;;AA+CX;AAhDsB,KAAtB,CAiDA,IAAMC,iBAAiB;AACrBC,cAAQ,MADa;AAErBC,kBAAY,EAFS;AAGrBC,eAAS,oBAHY;AAIrBC,cAAQ,KAJa;AAKrBC,aAAO,GALc;AAMrBC,cAAQ,GANa;AAOrBC,sBAAgB,GAPK;AAQrBvD,sBAAgBA,cARK;AASrBwD,kCAA4B,IATP;AAUrBC,2BAAqB,KAVA;AAWrBC,wBAAkB,KAXG;AAYrBC,uBAAiB,KAZI;AAarBC,oCAA8B,KAbT;AAcrBC,+BAAyB,KAdJ;AAerBC,YAAM,IAfe;AAgBrBC,gCAA0B,KAhBL;AAiBrBC,wBAAkB,KAjBG;AAkBrBC,uBAAiB,KAlBI;AAmBrBC,iCAA2B,KAnBN;AAoBrBC,sCAAgC,IApBX;AAqBrBC,wBAAkB,IArBG;AAsBrBC,mCAA6B,IAtBR;AAuBrBC,2BAAqB;AAAA,eAAM,MAAKvD,UAAL,EAAN;AAAA,OAvBA;AAwBrBwD,cAAQ3D,aAxBa;AAyBrB4D,8BAAwB;;AAG1B;AA5BuB,KAAvB,CA6BA,MAAKjE,IAAL,GAAY,SAAc,EAAd,EAAkByC,cAAlB,EAAkCzC,IAAlC,CAAZ;;AAEA,UAAKgE,MAAL,GAAc,SAAc,EAAd,EAAkB3D,aAAlB,EAAiC,MAAKL,IAAL,CAAUgE,MAA3C,CAAd;AACA,UAAKA,MAAL,CAAY1D,OAAZ,GAAsB,SAAc,EAAd,EAAkBD,cAAcC,OAAhC,EAAyC,MAAKN,IAAL,CAAUgE,MAAV,CAAiB1D,OAA1D,CAAtB;;AAEA,UAAK4D,UAAL,GAAkB,IAAIlF,UAAJ,CAAe,EAACgF,QAAQ,MAAKA,MAAd,EAAf,CAAlB;AACA,UAAKG,IAAL,GAAY,MAAKD,UAAL,CAAgBE,SAAhB,CAA0BC,IAA1B,CAA+B,MAAKH,UAApC,CAAZ;AACA,UAAKI,SAAL,GAAiB,MAAKJ,UAAL,CAAgBK,cAAhB,CAA+BF,IAA/B,CAAoC,MAAKH,UAAzC,CAAjB;;AAEA,UAAKM,SAAL,GAAiB,MAAKA,SAAL,CAAeH,IAAf,OAAjB;AACA,UAAK7D,UAAL,GAAkB,MAAKA,UAAL,CAAgB6D,IAAhB,OAAlB;AACA,UAAKI,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBJ,IAAvB,OAAzB;AACA,UAAKK,WAAL,GAAmB,MAAKA,WAAL,CAAiBL,IAAjB,OAAnB;;AAEA,UAAKM,SAAL,GAAiB,MAAKA,SAAL,CAAeN,IAAf,OAAjB;AACA,UAAKO,YAAL,GAAoB,MAAKA,YAAL,CAAkBP,IAAlB,OAApB;AACA,UAAKQ,aAAL,GAAqB,MAAKA,aAAL,CAAmBR,IAAnB,OAArB;AACA,UAAKS,SAAL,GAAiB,MAAKA,SAAL,CAAeT,IAAf,OAAjB;AACA,UAAKU,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBV,IAAvB,OAAzB;AACA,UAAKW,mBAAL,GAA2B,MAAKA,mBAAL,CAAyBX,IAAzB,OAA3B;AACA,UAAKY,cAAL,GAAsB,MAAKA,cAAL,CAAoBZ,IAApB,OAAtB;AACA,UAAKa,aAAL,GAAqB,MAAKA,aAAL,CAAmBb,IAAnB,OAArB;;AAEA,UAAKc,UAAL,GAAkB,MAAKA,UAAL,CAAgBd,IAAhB,OAAlB;AACA,UAAKe,SAAL,GAAiB,MAAKA,SAAL,CAAef,IAAf,OAAjB;AACA,UAAKgB,kBAAL,GAA0B,MAAKA,kBAAL,CAAwBhB,IAAxB,OAA1B;AACA,UAAKiB,cAAL,GAAsB,MAAKA,cAAL,CAAoBjB,IAApB,OAAtB;AACA,UAAKkB,UAAL,GAAkB,MAAKA,UAAL,CAAgBlB,IAAhB,OAAlB;AACA,UAAKmB,WAAL,GAAmB,MAAKA,WAAL,CAAiBnB,IAAjB,OAAnB;AACA,UAAKoB,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBpB,IAAvB,OAAzB;AACA,UAAKqB,sBAAL,GAA8B,MAAKA,sBAAL,CAA4BrB,IAA5B,OAA9B;AACA,UAAKsB,MAAL,GAAc,MAAKA,MAAL,CAAYtB,IAAZ,OAAd;AACA,UAAKuB,OAAL,GAAe,MAAKA,OAAL,CAAavB,IAAb,OAAf;AArHuB;AAsHxB;;AAvHH,sBAyHEO,YAzHF,yBAyHgBiB,MAzHhB,EAyHwB;AACpB,QAAMC,cAAc,KAAKC,cAAL,EAApB;AACA;AACA,QAAMC,aAAaF,YAAYG,OAAZ,CAAoBC,MAApB,CAA2B;AAAA,aAAUxD,OAAOzC,EAAP,KAAc4F,OAAO5F,EAA/B;AAAA,KAA3B,CAAnB;;AAEA,SAAKkG,cAAL,CAAoB;AAClBF,eAASD;AADS,KAApB;AAGD,GAjIH;;AAAA,sBAmIErB,SAnIF,sBAmIakB,MAnIb,EAmIqB;AACjB,QAAMO,iBAAiBP,OAAO5F,EAAP,IAAa4F,OAAOQ,WAAP,CAAmBnF,IAAvD;AACA,QAAMoF,mBAAmBT,OAAO3F,KAAP,IAAgBkG,cAAzC;AACA,QAAMG,mBAAmBV,OAAO1F,IAAhC;;AAEA,QAAIoG,qBAAqB,UAArB,IACAA,qBAAqB,mBADrB,IAEAA,qBAAqB,WAFzB,EAEsC;AACpC,UAAIC,MAAM,+FAAV;AACA,WAAKzG,IAAL,CAAU0G,GAAV,CAAcD,GAAd;AACA;AACD;;AAED,QAAM9D,SAAS;AACbzC,UAAImG,cADS;AAEblF,YAAMoF,gBAFO;AAGbnG,YAAMoG;AAHO,KAAf;;AAMA,QAAMG,QAAQ,KAAKX,cAAL,EAAd;AACA,QAAMC,aAAaU,MAAMT,OAAN,CAAcU,KAAd,EAAnB;AACAX,eAAWY,IAAX,CAAgBlE,MAAhB;;AAEA,SAAKyD,cAAL,CAAoB;AAClBF,eAASD;AADS,KAApB;;AAIA,WAAO,KAAKa,EAAZ;AACD,GA/JH;;AAAA,sBAiKEhC,aAjKF,4BAiKmB;AACf,SAAKsB,cAAL,CAAoB;AAClBW,mBAAa;AADK,KAApB;AAGD,GArKH;;AAAA,sBAuKEhC,SAvKF,sBAuKa7E,EAvKb,EAuKiB;AAAA,0BACO,KAAK8F,cAAL,EADP;AAAA,QACLE,OADK,mBACLA,OADK;;AAGb,QAAMa,cAAcb,QAAQC,MAAR,CAAe,UAACxD,MAAD,EAAY;AAC7C,aAAOA,OAAOvC,IAAP,KAAgB,UAAhB,IAA8BuC,OAAOzC,EAAP,KAAcA,EAAnD;AACD,KAFmB,EAEjB,CAFiB,CAApB;;AAIA,SAAKkG,cAAL,CAAoB;AAClBW,mBAAaA;AADK,KAApB;AAGD,GAjLH;;AAAA,sBAmLErC,iBAnLF,gCAmLuB;AACnB,QAAI,KAAKzE,IAAL,CAAU+D,mBAAd,EAAmC;AACjC,aAAO,KAAK/D,IAAL,CAAU+D,mBAAV,EAAP;AACD,KAFD,MAEO;AACL,WAAKvD,UAAL;AACD;AACF,GAzLH;;AAAA,sBA2LEuE,iBA3LF,gCA2LuB;AACnB,QAAMgC,QAAQ,KAAKF,EAAL,CAAQG,gBAAR,CAAyBtH,kBAAzB,CAAd;AACA,WAAOuH,OAAOC,IAAP,CAAYH,KAAZ,EAAmBI,GAAnB,CAAuB,UAACC,GAAD;AAAA,aAASL,MAAMK,GAAN,CAAT;AAAA,KAAvB,CAAP;AACD,GA9LH;;AAAA,sBAgMEpC,mBAhMF,kCAgMyB;AACrB,QAAMqC,iBAAiB,KAAKtC,iBAAL,EAAvB;AACA,QAAIsC,eAAeC,MAAnB,EAA2BD,eAAe,CAAf,EAAkBE,KAAlB;AAC5B,GAnMH;;AAAA,sBAqMEC,oBArMF,mCAqM0B;AACtB;AACA,QAAI,CAACC,QAAQf,KAAT,IAAkB,CAACe,QAAQf,KAAR,CAAc,KAAKtG,SAAnB,CAAvB,EAAsD;AAAA;;AACpD;AACAqH,cAAQC,SAAR,8CAAqB,KAAKtH,SAA1B,IAAsC,IAAtC,uBAA8C,EAA9C;AACD;;AAED;AACAuH,WAAOC,gBAAP,CAAwB,UAAxB,EAAoC,KAAK3C,cAAzC,EAAyD,KAAzD;AACD,GA9MH;;AAAA,sBAgNEA,cAhNF,2BAgNkB4C,KAhNlB,EAgNyB;AACrB;AACA,QAAI,CAACA,MAAMnB,KAAP,IAAgB,CAACmB,MAAMnB,KAAN,CAAY,KAAKtG,SAAjB,CAArB,EAAkD;AAChD,WAAKI,UAAL,CAAgB,EAAEsH,aAAa,KAAf,EAAhB;AACD;;AAED;AACA;AACA;AACA,QAAI,CAAC,KAAKpD,WAAL,EAAD,IAAuBmD,MAAMnB,KAA7B,IAAsCmB,MAAMnB,KAAN,CAAY,KAAKtG,SAAjB,CAA1C,EAAuE;AACrEqH,cAAQM,EAAR,CAAW,CAAC,CAAZ;AACD;AACF,GA5NH;;AAAA,sBA8NEC,gBA9NF,+BA8NsB;AAClB,QAAMC,YAAY,KAAKpB,EAAL,CAAQqB,aAAR,CAAsB,wBAAtB,CAAlB;AACA,QAAID,SAAJ,EAAeA,UAAUV,KAAV;AAChB,GAjOH;;AAAA,sBAmOErC,aAnOF,0BAmOiB2C,KAnOjB,EAmOwB;AACpB,QAAIR,iBAAiB,KAAKtC,iBAAL,EAArB;AACA,QAAIoD,mBAAmBd,eAAee,OAAf,CAAuBC,SAASC,aAAhC,CAAvB;;AAEA,QAAIT,MAAMU,QAAN,IAAkBJ,qBAAqB,CAA3C,EAA8C;AAC5Cd,qBAAeA,eAAeC,MAAf,GAAwB,CAAvC,EAA0CC,KAA1C;AACAM,YAAMW,cAAN;AACD;;AAED,QAAI,CAACX,MAAMU,QAAP,IAAmBJ,qBAAqBd,eAAeC,MAAf,GAAwB,CAApE,EAAuE;AACrED,qBAAe,CAAf,EAAkBE,KAAlB;AACAM,YAAMW,cAAN;AACD;AACF,GAhPH;;AAAA,sBAkPEhE,SAlPF,wBAkPe;AACX,SAAK2B,cAAL,CAAoB;AAClBsC,gBAAU;AADQ,KAApB;;AAIA;AACA,SAAKC,mBAAL,GAA2Bf,OAAOgB,OAAlC;AACA;AACA,SAAKC,kBAAL,GAA0BP,SAASC,aAAnC;;AAEA,QAAI,KAAKtI,IAAL,CAAU4D,8BAAd,EAA8C;AAC5CyE,eAASQ,IAAT,CAAcC,SAAd,CAAwBC,GAAxB,CAA4B,wBAA5B;AACD;;AAED,QAAI,KAAK/I,IAAL,CAAUiE,sBAAd,EAAsC;AACpC,WAAKuD,oBAAL;AACD;;AAED;AACAa,aAAST,gBAAT,CAA0B,SAA1B,EAAqC,KAAKxC,SAA1C;;AAEA,SAAK4D,QAAL,CAAc,KAAKjJ,IAAL,CAAUkJ,QAAV,EAAd;AACA,SAAKvD,sBAAL;AACA,SAAKsC,gBAAL;AACD,GA1QH;;AAAA,sBA4QExH,UA5QF,yBA4QyB;AAAA;;AAAA,QAAXR,IAAW,uEAAJ,EAAI;AAAA,4BAGjBA,IAHiB,CAEnB8H,WAFmB;AAAA,QAEnBA,WAFmB,qCAEL,IAFK;;;AAKrB,QAAI,KAAK9H,IAAL,CAAU4D,8BAAd,EAA8C;AAC5CyE,eAASQ,IAAT,CAAcC,SAAd,CAAwBI,MAAxB,CAA+B,wBAA/B;AACD;;AAED,QAAI,KAAKlJ,IAAL,CAAU6D,gBAAd,EAAgC;AAC9B,WAAKsC,cAAL,CAAoB;AAClBgD,mBAAW;AADO,OAApB;AAGA,UAAMC,UAAU,SAAVA,OAAU,GAAM;AACpB,eAAKjD,cAAL,CAAoB;AAClBsC,oBAAU,IADQ;AAElBU,qBAAW;AAFO,SAApB;AAIA,eAAKtC,EAAL,CAAQwC,mBAAR,CAA4B,cAA5B,EAA4CD,OAA5C,EAAqD,KAArD;AACD,OAND;AAOA,WAAKvC,EAAL,CAAQe,gBAAR,CAAyB,cAAzB,EAAyCwB,OAAzC,EAAkD,KAAlD;AACD,KAZD,MAYO;AACL,WAAKjD,cAAL,CAAoB;AAClBsC,kBAAU;AADQ,OAApB;AAGD;;AAED;AACAJ,aAASgB,mBAAT,CAA6B,SAA7B,EAAwC,KAAKjE,SAA7C;;AAEA,SAAKwD,kBAAL,CAAwBrB,KAAxB;;AAEA,QAAIO,WAAJ,EAAiB;AACf,UAAI,KAAK9H,IAAL,CAAUiE,sBAAd,EAAsC;AACpC;AACA,YAAIwD,QAAQf,KAAR,IAAiBe,QAAQf,KAAR,CAAc,KAAKtG,SAAnB,CAArB,EAAoD;AAClD;AACAqH,kBAAQM,EAAR,CAAW,CAAC,CAAZ;AACD;AACF;AACF;AACF,GArTH;;AAAA,sBAuTErD,WAvTF,0BAuTiB;AACb,WAAO,CAAC,KAAKqB,cAAL,GAAsB0C,QAAvB,IAAmC,KAA1C;AACD,GAzTH;;AAAA,sBA2TErD,SA3TF,sBA2TayC,KA3Tb,EA2ToB;AAChB;AACA,QAAIA,MAAMyB,OAAN,KAAkB1J,OAAtB,EAA+B,KAAK6E,iBAAL,CAAuBoD,KAAvB;AAC/B;AACA,QAAIA,MAAMyB,OAAN,KAAkB3J,OAAtB,EAA+B,KAAKuF,aAAL,CAAmB2C,KAAnB;AAChC,GAhUH;;AAAA,sBAkUExC,kBAlUF,iCAkUwB;AACpB,QAAI,KAAKrF,IAAL,CAAUwD,wBAAd,EAAwC,KAAKiB,iBAAL;AACzC,GApUH;;AAAA,sBAsUEe,WAtUF,wBAsUe+D,EAtUf,EAsUmB;AAAA;;AACf,QAAMC,QAAQjK,QAAQgK,GAAGE,aAAH,CAAiBC,KAAzB,CAAd;AACAF,UAAMG,OAAN,CAAc,UAACC,IAAD,EAAU;AACtB,UAAIA,KAAKC,IAAL,KAAc,MAAlB,EAA0B;;AAE1B,UAAMC,OAAOF,KAAKG,SAAL,EAAb;AACA,UAAI,CAACD,IAAL,EAAW;AACT,eAAK/J,IAAL,CAAU0G,GAAV,CAAc,qDAAd;AACA,eAAK1G,IAAL,CAAUiK,IAAV,CAAe,oBAAf,EAAqC,OAArC;AACA;AACD;AACD,aAAKjK,IAAL,CAAU0G,GAAV,CAAc,yBAAd;AACA,UAAI;AACF,eAAK1G,IAAL,CAAUkK,OAAV,CAAkB;AAChBC,kBAAQ,OAAKjK,EADG;AAEhBiB,gBAAM0I,KAAK1I,IAFK;AAGhBf,gBAAMyJ,KAAKzJ,IAHK;AAIhBgK,gBAAML;AAJU,SAAlB;AAMD,OAPD,CAOE,OAAOM,GAAP,EAAY;AACZ;AACD;AACF,KApBD;AAqBD,GA7VH;;AAAA,sBA+VE3E,iBA/VF,8BA+VqB8D,EA/VrB,EA+VyB;AAAA;;AACrBA,OAAGf,cAAH;AACA,QAAMgB,QAAQjK,QAAQgK,GAAG7G,MAAH,CAAU8G,KAAlB,CAAd;;AAEAA,UAAMG,OAAN,CAAc,UAACC,IAAD,EAAU;AACtB,UAAI;AACF,eAAK7J,IAAL,CAAUkK,OAAV,CAAkB;AAChBC,kBAAQ,OAAKjK,EADG;AAEhBiB,gBAAM0I,KAAK1I,IAFK;AAGhBf,gBAAMyJ,KAAKzJ,IAHK;AAIhBgK,gBAAMP;AAJU,SAAlB;AAMD,OAPD,CAOE,OAAOQ,GAAP,EAAY;AACZ;AACD;AACF,KAXD;AAYD,GA/WH;;AAAA,sBAiXEjF,UAjXF,yBAiXgB;AAAA;;AACZ;AACA,QAAMkF,mBAAmB/K,mBAAmB,KAAKU,IAAL,CAAU4C,OAA7B,CAAzB;AACA,QAAI,CAAC,KAAK5C,IAAL,CAAU6C,MAAX,IAAqBwH,gBAAzB,EAA2C;AACzCA,uBAAiBV,OAAjB,CAAyB;AAAA,eAAW/G,QAAQgF,gBAAR,CAAyB,OAAzB,EAAkC,OAAKpD,SAAvC,CAAX;AAAA,OAAzB;AACD;;AAED,QAAI,CAAC,KAAKxE,IAAL,CAAU6C,MAAX,IAAqB,CAACwH,gBAA1B,EAA4C;AAC1C,WAAKtK,IAAL,CAAU0G,GAAV,CAAc,gJAAd;AACD;;AAED;AACA,SAAK6D,sBAAL,GAA8BrL,SAAS,KAAK4H,EAAd,EAAkB,UAAC2C,KAAD,EAAW;AACzD,aAAKjE,UAAL,CAAgBiE,KAAhB;AACD,KAF6B,CAA9B;;AAIA,SAAK9D,sBAAL;AACAiC,WAAOC,gBAAP,CAAwB,QAAxB,EAAkC,KAAKlC,sBAAvC;;AAEA,SAAK3F,IAAL,CAAUwK,EAAV,CAAa,eAAb,EAA8B,KAAK3F,YAAnC;AACD,GArYH;;AAAA,sBAuYE4F,YAvYF,2BAuYkB;AAAA;;AACd,QAAMH,mBAAmB/K,mBAAmB,KAAKU,IAAL,CAAU4C,OAA7B,CAAzB;AACA,QAAI,CAAC,KAAK5C,IAAL,CAAU6C,MAAX,IAAqBwH,gBAAzB,EAA2C;AACzCA,uBAAiBV,OAAjB,CAAyB;AAAA,eAAW/G,QAAQyG,mBAAR,CAA4B,OAA5B,EAAqC,OAAK7E,SAA1C,CAAX;AAAA,OAAzB;AACD;;AAED,SAAK8F,sBAAL;AACA3C,WAAO0B,mBAAP,CAA2B,QAA3B,EAAqC,KAAK3D,sBAA1C;AACAiC,WAAO0B,mBAAP,CAA2B,UAA3B,EAAuC,KAAKpE,cAA5C,EAA4D,KAA5D;AACA,SAAKlF,IAAL,CAAU0K,GAAV,CAAc,eAAd,EAA+B,KAAK7F,YAApC;AACD,GAjZH;;AAAA,sBAmZEc,sBAnZF,qCAmZ4B;AACxB,QAAMgF,cAAc,KAAK7D,EAAL,CAAQqB,aAAR,CAAsB,uBAAtB,CAApB;AACA,SAAKnI,IAAL,CAAU0G,GAAV,uBAAkCiE,YAAYC,WAA9C;;AAEA,SAAKxE,cAAL,CAAoB;AAClByE,sBAAgBF,YAAYC;AADV,KAApB;AAGD,GA1ZH;;AAAA,sBA4ZErF,cA5ZF,2BA4ZkBuF,MA5ZlB,EA4Z0B;AACtB,SAAK1E,cAAL,CAAoB;AAClB2E,mBAAaD,UAAU;AADL,KAApB;AAGD,GAhaH;;AAAA,sBAkaEtF,UAlaF,uBAkaciE,KAlad,EAkaqB;AAAA;;AACjB,SAAKzJ,IAAL,CAAU0G,GAAV,CAAc,gCAAd;;AAEA+C,UAAMG,OAAN,CAAc,UAACC,IAAD,EAAU;AACtB,UAAI;AACF,eAAK7J,IAAL,CAAUkK,OAAV,CAAkB;AAChBC,kBAAQ,OAAKjK,EADG;AAEhBiB,gBAAM0I,KAAK1I,IAFK;AAGhBf,gBAAMyJ,KAAKzJ,IAHK;AAIhBgK,gBAAMP;AAJU,SAAlB;AAMD,OAPD,CAOE,OAAOQ,GAAP,EAAY;AACZ;AACD;AACF,KAXD;AAYD,GAjbH;;AAAA,sBAmbEzE,MAnbF,mBAmbUe,KAnbV,EAmbiB;AAAA;;AACb,QAAMZ,cAAc,KAAKC,cAAL,EAApB;AADa,QAELyD,KAFK,GAEmB9C,KAFnB,CAEL8C,KAFK;AAAA,QAEEuB,YAFF,GAEmBrE,KAFnB,CAEEqE,YAFF;;;AAIb,QAAMC,WAAW/D,OAAOC,IAAP,CAAYsC,KAAZ,EAAmBtD,MAAnB,CAA0B,UAAC0D,IAAD,EAAU;AACnD,aAAO,CAACJ,MAAMI,IAAN,EAAYqB,QAAZ,CAAqBC,aAA7B;AACD,KAFgB,CAAjB;AAGA,QAAMC,kBAAkBlE,OAAOC,IAAP,CAAYsC,KAAZ,EAAmBtD,MAAnB,CAA0B,UAAC0D,IAAD,EAAU;AAC1D,aAAO,CAACJ,MAAMI,IAAN,EAAYqB,QAAZ,CAAqB/I,cAAtB,IACAsH,MAAMI,IAAN,EAAYqB,QAAZ,CAAqBC,aADrB,IAEA,CAAC1B,MAAMI,IAAN,EAAYwB,QAFpB;AAGD,KAJuB,CAAxB;;AAMA,QAAIC,uBAAuB,EAA3B;AACAF,oBAAgBxB,OAAhB,CAAwB,UAACC,IAAD,EAAU;AAChCyB,2BAAqBzE,IAArB,CAA0B4C,MAAMI,IAAN,CAA1B;AACD,KAFD;;AAIA,QAAI0B,YAAY,CAAhB;AACA,QAAIC,oBAAoB,CAAxB;AACAF,yBAAqB1B,OAArB,CAA6B,UAACC,IAAD,EAAU;AACrC0B,kBAAYA,aAAa1B,KAAKqB,QAAL,CAAcO,UAAd,IAA4B,CAAzC,CAAZ;AACAD,0BAAoBA,qBAAqB3B,KAAKqB,QAAL,CAAcQ,aAAd,IAA+B,CAApD,CAApB;AACD,KAHD;AAIAH,gBAAY9L,YAAY8L,SAAZ,CAAZ;AACAC,wBAAoB/L,YAAY+L,iBAAZ,CAApB;;AAEA,QAAMG,+BAA+B,SAA/BA,4BAA+B,CAAChJ,MAAD,EAAY;AAC/C,UAAMmD,SAAS,OAAK9F,IAAL,CAAU4L,SAAV,CAAoBjJ,OAAOzC,EAA3B,CAAf;AACA,aAAO,SAAc,EAAd,EAAkByC,MAAlB,EAA0B;AAC/BkJ,cAAM/F,OAAO+F,IAAP,IAAe,OAAK5L,IAAL,CAAUP,cADA;AAE/BkG,gBAAQE,OAAOF;AAFgB,OAA1B,CAAP;AAID,KAND;;AAQA,QAAMkG,cAAc,SAAdA,WAAc,CAACnJ,MAAD,EAAY;AAC9B,UAAMmD,SAAS,OAAK9F,IAAL,CAAU4L,SAAV,CAAoBjJ,OAAOzC,EAA3B,CAAf;AACA;AACA,UAAI,OAAO4F,OAAOgG,WAAd,KAA8B,UAAlC,EAA8C;AAC5C,eAAO,IAAP;AACD;AACD,aAAOhG,OAAOgG,WAAP,EAAP;AACD,KAPD;;AASA,QAAMC,YAAYhG,YAAYG,OAAZ,CACfC,MADe,CACR;AAAA,aAAUxD,OAAOvC,IAAP,KAAgB,UAAhB,IAA8B0L,YAAYnJ,MAAZ,CAAxC;AAAA,KADQ,EAEfyE,GAFe,CAEXuE,4BAFW,CAAlB;;AAIA,QAAMK,qBAAqBjG,YAAYG,OAAZ,CACxBC,MADwB,CACjB;AAAA,aAAUxD,OAAOvC,IAAP,KAAgB,mBAA1B;AAAA,KADiB,EAExBgH,GAFwB,CAEpBuE,4BAFoB,CAA3B;;AAIA,QAAMM,cAAc,SAAdA,WAAc,CAACzC,EAAD,EAAQ;AAC1B,aAAKxJ,IAAL,CAAUU,MAAV,GAAmBwL,KAAnB,CAAyB,UAAC7B,GAAD,EAAS;AAChC;AACA,eAAKrK,IAAL,CAAU0G,GAAV,CAAc2D,IAAI8B,KAAJ,IAAa9B,IAAI+B,OAAjB,IAA4B/B,GAA1C;AACD,OAHD;AAID,KALD;;AAOA,QAAMgC,eAAe,SAAfA,YAAe,CAACC,MAAD,EAAY;AAC/B,aAAKtM,IAAL,CAAUuM,IAAV,CAAe,eAAf,EAAgCD,MAAhC;AACA,aAAKtM,IAAL,CAAUoB,UAAV,CAAqBkL,MAArB;AACD,KAHD;;AAKA,QAAME,eAAe,SAAfA,YAAe,CAACC,IAAD,EAAOH,MAAP,EAAkB;AACrC,aAAKtM,IAAL,CAAU0M,WAAV,CAAsBJ,MAAtB,EAA8BG,IAA9B;AACA,aAAKlH,cAAL;AACD,KAHD;;AAKA,WAAOpG,YAAY;AACjBwH,aAAOA,KADU;AAEjBgG,aAAO5G,WAFU;AAGjBkF,gBAAUA,QAHO;AAIjBxB,aAAOA,KAJU;AAKjBmD,sBAAgB1F,OAAOC,IAAP,CAAYsC,KAAZ,EAAmBlC,MALlB;AAMjBsF,qBAAelG,MAAMkG,aANJ;AAOjBd,iBAAWA,SAPM;AAQjBhF,mBAAahB,YAAYgB,WARR;AASjBjD,wBAAkB,KAAK7D,IAAL,CAAU6D,gBATX;AAUjBsF,iBAAWrD,YAAYqD,SAVN;AAWjBwC,iBAAW,KAAK5L,IAAL,CAAU4L,SAXJ;AAYjBI,0BAAoBA,kBAZH;AAajBc,mBAAa,KAAK9M,IAAL,CAAUC,IAAV,CAAe6M,WAbX;AAcjB1J,wBAAkB,KAAKnD,IAAL,CAAUmD,gBAdX;AAejBC,uBAAiB,KAAKpD,IAAL,CAAUoD,eAfV;AAgBjBC,oCAA8B,KAAKrD,IAAL,CAAUqD,4BAhBvB;AAiBjBpD,UAAI,KAAKA,EAjBQ;AAkBjBO,kBAAY,KAAKiE,iBAlBA;AAmBjBY,0BAAoB,KAAKA,kBAnBR;AAoBjBI,yBAAmB,KAAKA,iBApBP;AAqBjBD,mBAAa,KAAKA,WArBD;AAsBjB3C,cAAQ,KAAK7C,IAAL,CAAU6C,MAtBD;AAuBjBiC,iBAAW,KAAKA,SAvBC;AAwBjBD,qBAAe,KAAKA,aAxBH;AAyBjB4B,WAAK,KAAK1G,IAAL,CAAU0G,GAzBE;AA0BjBtC,YAAM,KAAKA,IA1BM;AA2BjBG,iBAAW,KAAKA,SA3BC;AA4BjB2F,eAAS,KAAKlK,IAAL,CAAUkK,OA5BF;AA6BjB9I,kBAAY,KAAKpB,IAAL,CAAUoB,UA7BL;AA8BjB6I,YAAM,KAAKjK,IAAL,CAAUiK,IA9BC;AA+BjBzG,YAAM,KAAKvD,IAAL,CAAUuD,IA/BC;AAgCjBZ,kBAAYmD,YAAYnD,UAhCP;AAiCjBmK,wBAAkB/B,aAAa+B,gBAAb,IAAiC,KAjClC;AAkCjBC,eAAShC,aAAagC,OAAb,IAAwB,KAlChB;AAmCjBf,mBAAaA,WAnCI;AAoCjB5J,mBAAa,KAAKrC,IAAL,CAAUiN,WApCN;AAqCjB3K,mBAAa,KAAKtC,IAAL,CAAUsC,WArCN;AAsCjB+J,oBAAcA,YAtCG;AAuCjBtB,mBAAahF,YAAYgF,WAvCR;AAwCjBxF,sBAAgB,KAAKA,cAxCJ;AAyCjBiH,oBAAcA,YAzCG;AA0CjB7G,8BAAwB,KAAKA,sBA1CZ;AA2CjB5C,aAAO,KAAK9C,IAAL,CAAU8C,KA3CA;AA4CjBC,cAAQ,KAAK/C,IAAL,CAAU+C,MA5CD;AA6CjBE,kCAA4B,KAAKjD,IAAL,CAAUiD,0BA7CrB;AA8CjBa,mCAA6B,KAAK9D,IAAL,CAAU8D,2BA9CtB;AA+CjBmJ,oBAAcnH,YAAY8E,cA/CT;AAgDjBsC,cAAQpH,YAAY8E,cAAZ,GAA6B,GAhDpB;AAiDjBuC,qBAAe,KAAKA,aAjDH;AAkDjBC,wBAAkB,KAAKrN,IAAL,CAAUC,IAAV,CAAeqN,YAAf,CAA4BD,gBAlD7B;AAmDjBE,wBAAkB,KAAKvN,IAAL,CAAUC,IAAV,CAAeqN,YAAf,CAA4BC;AAnD7B,KAAZ,CAAP;AAqDD,GA7iBH;;AAAA,sBA+iBEC,uBA/iBF,sCA+iB6B;AAAA;;AACzB,SAAKxN,IAAL,CAAUyN,cAAV,CAAyB,UAAC3H,MAAD,EAAY;AACnC,UAAIA,UAAU,CAACA,OAAOnD,MAAlB,IAA4BmD,OAAO7F,IAAnC,IAA2C6F,OAAO7F,IAAP,CAAY0C,MAAZ,KAAuB,OAAK2D,WAA3E,EAAwF;AACtF,eAAK1B,SAAL,CAAekB,MAAf;AACD;AACF,KAJD;AAKD,GArjBH;;AAAA,sBAujBED,OAvjBF,sBAujBa;AAAA;;AACT;AACA,SAAKO,cAAL,CAAoB;AAClBsC,gBAAU,IADQ;AAElBgF,oBAAc,KAFI;AAGlB3G,mBAAa,KAHK;AAIlBnE,kBAAY,KAAK3C,IAAL,CAAU2C,UAJJ;AAKlBsD,eAAS;AALS,KAApB;;AAQA,QAAMvD,SAAS,KAAK1C,IAAL,CAAU0C,MAAzB;AACA,QAAIA,MAAJ,EAAY;AACV,WAAKgL,KAAL,CAAWhL,MAAX,EAAmB,IAAnB;AACD;;AAED,QAAMiL,UAAU,KAAK3N,IAAL,CAAU2N,OAAV,IAAqB,EAArC;AACAA,YAAQhE,OAAR,CAAgB,UAACiE,QAAD,EAAc;AAC5B,UAAM/H,SAAS,QAAK9F,IAAL,CAAU4L,SAAV,CAAoBiC,QAApB,CAAf;AACA,UAAI/H,MAAJ,EAAYA,OAAO6H,KAAP,UAAmB7H,MAAnB;AACb,KAHD;;AAKA,QAAI,CAAC,KAAK7F,IAAL,CAAUyD,gBAAf,EAAiC;AAC/B,WAAK1D,IAAL,CAAU8N,GAAV,CAAc1O,SAAd,EAAyB;AACvBc,YAAO,KAAKA,EAAZ,eADuB;AAEvByC,gBAAQ,IAFe;AAGvBS,0BAAkB,KAAKnD,IAAL,CAAUmD,gBAHL;AAIvBC,yBAAiB,KAAKpD,IAAL,CAAUoD,eAJJ;AAKvBC,sCAA8B,KAAKrD,IAAL,CAAUqD,4BALjB;AAMvBH,6BAAqB,KAAKlD,IAAL,CAAUkD,mBANR;AAOvB4K,yBAAiB,KAAK9N,IAAL,CAAUsD,uBAPJ;AAQvBU,gBAAQ,KAAKhE,IAAL,CAAUgE;AARK,OAAzB;AAUD;;AAED,QAAI,CAAC,KAAKhE,IAAL,CAAU0D,eAAf,EAAgC;AAC9B,WAAK3D,IAAL,CAAU8N,GAAV,CAAczO,QAAd,EAAwB;AACtBa,YAAO,KAAKA,EAAZ,cADsB;AAEtByC,gBAAQ;AAFc,OAAxB;AAID;;AAED,QAAI,CAAC,KAAK1C,IAAL,CAAU2D,yBAAf,EAA0C;AACxC,WAAK5D,IAAL,CAAU8N,GAAV,CAAcxO,kBAAd,EAAkC;AAChCY,YAAO,KAAKA,EAAZ,wBADgC;AAEhC+C,wBAAgB,KAAKhD,IAAL,CAAUgD;AAFM,OAAlC;AAID;;AAED,SAAKuK,uBAAL;;AAEA,SAAKpI,UAAL;AACD,GA1mBH;;AAAA,sBA4mBE4I,SA5mBF,wBA4mBe;AAAA;;AACX,QAAI,CAAC,KAAK/N,IAAL,CAAU0D,eAAf,EAAgC;AAC9B,UAAMsK,WAAW,KAAKjO,IAAL,CAAU4L,SAAV,CAAuB,KAAK1L,EAA5B,eAAjB;AACA;AACA;AACA,UAAI+N,QAAJ,EAAc,KAAKjO,IAAL,CAAUkO,YAAV,CAAuBD,QAAvB;AACf;;AAED,QAAI,CAAC,KAAKhO,IAAL,CAAUyD,gBAAf,EAAiC;AAC/B,UAAMyK,YAAY,KAAKnO,IAAL,CAAU4L,SAAV,CAAuB,KAAK1L,EAA5B,gBAAlB;AACA,UAAIiO,SAAJ,EAAe,KAAKnO,IAAL,CAAUkO,YAAV,CAAuBC,SAAvB;AAChB;;AAED,QAAI,CAAC,KAAKlO,IAAL,CAAU2D,yBAAf,EAA0C;AACxC,UAAMwK,YAAY,KAAKpO,IAAL,CAAU4L,SAAV,CAAuB,KAAK1L,EAA5B,yBAAlB;AACA,UAAIkO,SAAJ,EAAe,KAAKpO,IAAL,CAAUkO,YAAV,CAAuBE,SAAvB;AAChB;;AAED,QAAMR,UAAU,KAAK3N,IAAL,CAAU2N,OAAV,IAAqB,EAArC;AACAA,YAAQhE,OAAR,CAAgB,UAACiE,QAAD,EAAc;AAC5B,UAAM/H,SAAS,QAAK9F,IAAL,CAAU4L,SAAV,CAAoBiC,QAApB,CAAf;AACA,UAAI/H,MAAJ,EAAYA,OAAOuI,OAAP;AACb,KAHD;;AAKA,SAAKA,OAAL;AACA,SAAK5D,YAAL;AACD,GAtoBH;;AAAA;AAAA,EAAyC1L,MAAzC","file":"index.js","sourcesContent":["const Plugin = require('../../core/Plugin')\nconst Translator = require('../../core/Translator')\nconst dragDrop = require('drag-drop')\nconst DashboardUI = require('./Dashboard')\nconst StatusBar = require('../StatusBar')\nconst Informer = require('../Informer')\nconst ThumbnailGenerator = require('../ThumbnailGenerator')\nconst findAllDOMElements = require('../../utils/findAllDOMElements')\nconst toArray = require('../../utils/toArray')\nconst prettyBytes = require('prettier-bytes')\nconst { defaultTabIcon } = require('./icons')\n\n// Some code for managing focus was adopted from https://github.com/ghosh/micromodal\n// MIT licence, https://github.com/ghosh/micromodal/blob/master/LICENSE.md\n// Copyright (c) 2017 Indrashish Ghosh\nconst FOCUSABLE_ELEMENTS = [\n  'a[href]:not([tabindex^=\"-\"]):not([inert]):not([aria-hidden])',\n  'area[href]:not([tabindex^=\"-\"]):not([inert]):not([aria-hidden])',\n  'input:not([disabled]):not([inert]):not([aria-hidden])',\n  'select:not([disabled]):not([inert]):not([aria-hidden])',\n  'textarea:not([disabled]):not([inert]):not([aria-hidden])',\n  'button:not([disabled]):not([inert]):not([aria-hidden])',\n  'iframe:not([tabindex^=\"-\"]):not([inert]):not([aria-hidden])',\n  'object:not([tabindex^=\"-\"]):not([inert]):not([aria-hidden])',\n  'embed:not([tabindex^=\"-\"]):not([inert]):not([aria-hidden])',\n  '[contenteditable]:not([tabindex^=\"-\"]):not([inert]):not([aria-hidden])',\n  '[tabindex]:not([tabindex^=\"-\"]):not([inert]):not([aria-hidden])'\n]\n\nconst TAB_KEY = 9\nconst ESC_KEY = 27\n\n/**\n * Dashboard UI with previews, metadata editing, tabs for various services and more\n */\nmodule.exports = class Dashboard extends Plugin {\n  constructor (uppy, opts) {\n    super(uppy, opts)\n    this.id = this.opts.id || 'Dashboard'\n    this.title = 'Dashboard'\n    this.type = 'orchestrator'\n    this.modalName = 'uppy-Dashboard'\n\n    const defaultLocale = {\n      strings: {\n        selectToUpload: 'Select files to upload',\n        closeModal: 'Close Modal',\n        upload: 'Upload',\n        importFrom: 'Import from %{name}',\n        dashboardWindowTitle: 'Uppy Dashboard Window (Press escape to close)',\n        dashboardTitle: 'Uppy Dashboard',\n        copyLinkToClipboardSuccess: 'Link copied to clipboard',\n        copyLinkToClipboardFallback: 'Copy the URL below',\n        copyLink: 'Copy link',\n        fileSource: 'File source: %{name}',\n        done: 'Done',\n        name: 'Name',\n        removeFile: 'Remove file',\n        editFile: 'Edit file',\n        editing: 'Editing %{file}',\n        finishEditingFile: 'Finish editing file',\n        saveChanges: 'Save changes',\n        cancel: 'Cancel',\n        localDisk: 'Local Disk',\n        myDevice: 'My Device',\n        dropPasteImport: 'Drop files here, paste, import from one of the locations above or %{browse}',\n        dropPaste: 'Drop files here, paste or %{browse}',\n        browse: 'browse',\n        fileProgress: 'File progress: upload speed and ETA',\n        numberOfSelectedFiles: 'Number of selected files',\n        uploadAllNewFiles: 'Upload all new files',\n        emptyFolderAdded: 'No files were added from empty folder',\n        uploadComplete: 'Upload complete',\n        resumeUpload: 'Resume upload',\n        pauseUpload: 'Pause upload',\n        retryUpload: 'Retry upload',\n        uploadXFiles: {\n          0: 'Upload %{smart_count} file',\n          1: 'Upload %{smart_count} files'\n        },\n        uploadXNewFiles: {\n          0: 'Upload +%{smart_count} file',\n          1: 'Upload +%{smart_count} files'\n        },\n        folderAdded: {\n          0: 'Added %{smart_count} file from %{folder}',\n          1: 'Added %{smart_count} files from %{folder}'\n        }\n      }\n    }\n\n    // set default options\n    const defaultOptions = {\n      target: 'body',\n      metaFields: [],\n      trigger: '#uppy-select-files',\n      inline: false,\n      width: 750,\n      height: 550,\n      thumbnailWidth: 280,\n      defaultTabIcon: defaultTabIcon,\n      showLinkToFileUploadResult: true,\n      showProgressDetails: false,\n      hideUploadButton: false,\n      hideRetryButton: false,\n      hidePauseResumeCancelButtons: false,\n      hideProgressAfterFinish: false,\n      note: null,\n      closeModalOnClickOutside: false,\n      disableStatusBar: false,\n      disableInformer: false,\n      disableThumbnailGenerator: false,\n      disablePageScrollWhenModalOpen: true,\n      animateOpenClose: true,\n      proudlyDisplayPoweredByUppy: true,\n      onRequestCloseModal: () => this.closeModal(),\n      locale: defaultLocale,\n      browserBackButtonClose: false\n    }\n\n    // merge default options with the ones set by user\n    this.opts = Object.assign({}, defaultOptions, opts)\n\n    this.locale = Object.assign({}, defaultLocale, this.opts.locale)\n    this.locale.strings = Object.assign({}, defaultLocale.strings, this.opts.locale.strings)\n\n    this.translator = new Translator({locale: this.locale})\n    this.i18n = this.translator.translate.bind(this.translator)\n    this.i18nArray = this.translator.translateArray.bind(this.translator)\n\n    this.openModal = this.openModal.bind(this)\n    this.closeModal = this.closeModal.bind(this)\n    this.requestCloseModal = this.requestCloseModal.bind(this)\n    this.isModalOpen = this.isModalOpen.bind(this)\n\n    this.addTarget = this.addTarget.bind(this)\n    this.removeTarget = this.removeTarget.bind(this)\n    this.hideAllPanels = this.hideAllPanels.bind(this)\n    this.showPanel = this.showPanel.bind(this)\n    this.getFocusableNodes = this.getFocusableNodes.bind(this)\n    this.setFocusToFirstNode = this.setFocusToFirstNode.bind(this)\n    this.handlePopState = this.handlePopState.bind(this)\n    this.maintainFocus = this.maintainFocus.bind(this)\n\n    this.initEvents = this.initEvents.bind(this)\n    this.onKeydown = this.onKeydown.bind(this)\n    this.handleClickOutside = this.handleClickOutside.bind(this)\n    this.toggleFileCard = this.toggleFileCard.bind(this)\n    this.handleDrop = this.handleDrop.bind(this)\n    this.handlePaste = this.handlePaste.bind(this)\n    this.handleInputChange = this.handleInputChange.bind(this)\n    this.updateDashboardElWidth = this.updateDashboardElWidth.bind(this)\n    this.render = this.render.bind(this)\n    this.install = this.install.bind(this)\n  }\n\n  removeTarget (plugin) {\n    const pluginState = this.getPluginState()\n    // filter out the one we want to remove\n    const newTargets = pluginState.targets.filter(target => target.id !== plugin.id)\n\n    this.setPluginState({\n      targets: newTargets\n    })\n  }\n\n  addTarget (plugin) {\n    const callerPluginId = plugin.id || plugin.constructor.name\n    const callerPluginName = plugin.title || callerPluginId\n    const callerPluginType = plugin.type\n\n    if (callerPluginType !== 'acquirer' &&\n        callerPluginType !== 'progressindicator' &&\n        callerPluginType !== 'presenter') {\n      let msg = 'Dashboard: Modal can only be used by plugins of types: acquirer, progressindicator, presenter'\n      this.uppy.log(msg)\n      return\n    }\n\n    const target = {\n      id: callerPluginId,\n      name: callerPluginName,\n      type: callerPluginType\n    }\n\n    const state = this.getPluginState()\n    const newTargets = state.targets.slice()\n    newTargets.push(target)\n\n    this.setPluginState({\n      targets: newTargets\n    })\n\n    return this.el\n  }\n\n  hideAllPanels () {\n    this.setPluginState({\n      activePanel: false\n    })\n  }\n\n  showPanel (id) {\n    const { targets } = this.getPluginState()\n\n    const activePanel = targets.filter((target) => {\n      return target.type === 'acquirer' && target.id === id\n    })[0]\n\n    this.setPluginState({\n      activePanel: activePanel\n    })\n  }\n\n  requestCloseModal () {\n    if (this.opts.onRequestCloseModal) {\n      return this.opts.onRequestCloseModal()\n    } else {\n      this.closeModal()\n    }\n  }\n\n  getFocusableNodes () {\n    const nodes = this.el.querySelectorAll(FOCUSABLE_ELEMENTS)\n    return Object.keys(nodes).map((key) => nodes[key])\n  }\n\n  setFocusToFirstNode () {\n    const focusableNodes = this.getFocusableNodes()\n    if (focusableNodes.length) focusableNodes[0].focus()\n  }\n\n  updateBrowserHistory () {\n    // Ensure history state does not already contain our modal name to avoid double-pushing\n    if (!history.state || !history.state[this.modalName]) {\n      // Push to history so that the page is not lost on browser back button press\n      history.pushState({ [this.modalName]: true }, '')\n    }\n\n    // Listen for back button presses\n    window.addEventListener('popstate', this.handlePopState, false)\n  }\n\n  handlePopState (event) {\n    // Close the modal if the history state no longer contains our modal name\n    if (!event.state || !event.state[this.modalName]) {\n      this.closeModal({ manualClose: false })\n    }\n\n    // When the browser back button is pressed and uppy is now the latest entry in the history but the modal is closed, fix the history by removing the uppy history entry\n    // This occurs when another entry is added into the history state while the modal is open, and then the modal gets manually closed\n    // Solves PR #575 (https://github.com/transloadit/uppy/pull/575)\n    if (!this.isModalOpen() && event.state && event.state[this.modalName]) {\n      history.go(-1)\n    }\n  }\n\n  setFocusToBrowse () {\n    const browseBtn = this.el.querySelector('.uppy-Dashboard-browse')\n    if (browseBtn) browseBtn.focus()\n  }\n\n  maintainFocus (event) {\n    var focusableNodes = this.getFocusableNodes()\n    var focusedItemIndex = focusableNodes.indexOf(document.activeElement)\n\n    if (event.shiftKey && focusedItemIndex === 0) {\n      focusableNodes[focusableNodes.length - 1].focus()\n      event.preventDefault()\n    }\n\n    if (!event.shiftKey && focusedItemIndex === focusableNodes.length - 1) {\n      focusableNodes[0].focus()\n      event.preventDefault()\n    }\n  }\n\n  openModal () {\n    this.setPluginState({\n      isHidden: false\n    })\n\n    // save scroll position\n    this.savedScrollPosition = window.scrollY\n    // save active element, so we can restore focus when modal is closed\n    this.savedActiveElement = document.activeElement\n\n    if (this.opts.disablePageScrollWhenModalOpen) {\n      document.body.classList.add('uppy-Dashboard-isFixed')\n    }\n\n    if (this.opts.browserBackButtonClose) {\n      this.updateBrowserHistory()\n    }\n\n    // handle ESC and TAB keys in modal dialog\n    document.addEventListener('keydown', this.onKeydown)\n\n    this.rerender(this.uppy.getState())\n    this.updateDashboardElWidth()\n    this.setFocusToBrowse()\n  }\n\n  closeModal (opts = {}) {\n    const {\n      manualClose = true // Whether the modal is being closed by the user (`true`) or by other means (e.g. browser back button)\n    } = opts\n\n    if (this.opts.disablePageScrollWhenModalOpen) {\n      document.body.classList.remove('uppy-Dashboard-isFixed')\n    }\n\n    if (this.opts.animateOpenClose) {\n      this.setPluginState({\n        isClosing: true\n      })\n      const handler = () => {\n        this.setPluginState({\n          isHidden: true,\n          isClosing: false\n        })\n        this.el.removeEventListener('animationend', handler, false)\n      }\n      this.el.addEventListener('animationend', handler, false)\n    } else {\n      this.setPluginState({\n        isHidden: true\n      })\n    }\n\n    // handle ESC and TAB keys in modal dialog\n    document.removeEventListener('keydown', this.onKeydown)\n\n    this.savedActiveElement.focus()\n\n    if (manualClose) {\n      if (this.opts.browserBackButtonClose) {\n        // Make sure that the latest entry in the history state is our modal name\n        if (history.state && history.state[this.modalName]) {\n          // Go back in history to clear out the entry we created (ultimately closing the modal)\n          history.go(-1)\n        }\n      }\n    }\n  }\n\n  isModalOpen () {\n    return !this.getPluginState().isHidden || false\n  }\n\n  onKeydown (event) {\n    // close modal on esc key press\n    if (event.keyCode === ESC_KEY) this.requestCloseModal(event)\n    // maintainFocus on tab key press\n    if (event.keyCode === TAB_KEY) this.maintainFocus(event)\n  }\n\n  handleClickOutside () {\n    if (this.opts.closeModalOnClickOutside) this.requestCloseModal()\n  }\n\n  handlePaste (ev) {\n    const files = toArray(ev.clipboardData.items)\n    files.forEach((file) => {\n      if (file.kind !== 'file') return\n\n      const blob = file.getAsFile()\n      if (!blob) {\n        this.uppy.log('[Dashboard] File pasted, but the file blob is empty')\n        this.uppy.info('Error pasting file', 'error')\n        return\n      }\n      this.uppy.log('[Dashboard] File pasted')\n      try {\n        this.uppy.addFile({\n          source: this.id,\n          name: file.name,\n          type: file.type,\n          data: blob\n        })\n      } catch (err) {\n        // Nothing, restriction errors handled in Core\n      }\n    })\n  }\n\n  handleInputChange (ev) {\n    ev.preventDefault()\n    const files = toArray(ev.target.files)\n\n    files.forEach((file) => {\n      try {\n        this.uppy.addFile({\n          source: this.id,\n          name: file.name,\n          type: file.type,\n          data: file\n        })\n      } catch (err) {\n        // Nothing, restriction errors handled in Core\n      }\n    })\n  }\n\n  initEvents () {\n    // Modal open button\n    const showModalTrigger = findAllDOMElements(this.opts.trigger)\n    if (!this.opts.inline && showModalTrigger) {\n      showModalTrigger.forEach(trigger => trigger.addEventListener('click', this.openModal))\n    }\n\n    if (!this.opts.inline && !showModalTrigger) {\n      this.uppy.log('Dashboard modal trigger not found. Make sure `trigger` is set in Dashboard options unless you are planning to call openModal() method yourself')\n    }\n\n    // Drag Drop\n    this.removeDragDropListener = dragDrop(this.el, (files) => {\n      this.handleDrop(files)\n    })\n\n    this.updateDashboardElWidth()\n    window.addEventListener('resize', this.updateDashboardElWidth)\n\n    this.uppy.on('plugin-remove', this.removeTarget)\n  }\n\n  removeEvents () {\n    const showModalTrigger = findAllDOMElements(this.opts.trigger)\n    if (!this.opts.inline && showModalTrigger) {\n      showModalTrigger.forEach(trigger => trigger.removeEventListener('click', this.openModal))\n    }\n\n    this.removeDragDropListener()\n    window.removeEventListener('resize', this.updateDashboardElWidth)\n    window.removeEventListener('popstate', this.handlePopState, false)\n    this.uppy.off('plugin-remove', this.removeTarget)\n  }\n\n  updateDashboardElWidth () {\n    const dashboardEl = this.el.querySelector('.uppy-Dashboard-inner')\n    this.uppy.log(`Dashboard width: ${dashboardEl.offsetWidth}`)\n\n    this.setPluginState({\n      containerWidth: dashboardEl.offsetWidth\n    })\n  }\n\n  toggleFileCard (fileId) {\n    this.setPluginState({\n      fileCardFor: fileId || false\n    })\n  }\n\n  handleDrop (files) {\n    this.uppy.log('[Dashboard] Files were dropped')\n\n    files.forEach((file) => {\n      try {\n        this.uppy.addFile({\n          source: this.id,\n          name: file.name,\n          type: file.type,\n          data: file\n        })\n      } catch (err) {\n        // Nothing, restriction errors handled in Core\n      }\n    })\n  }\n\n  render (state) {\n    const pluginState = this.getPluginState()\n    const { files, capabilities } = state\n\n    const newFiles = Object.keys(files).filter((file) => {\n      return !files[file].progress.uploadStarted\n    })\n    const inProgressFiles = Object.keys(files).filter((file) => {\n      return !files[file].progress.uploadComplete &&\n             files[file].progress.uploadStarted &&\n             !files[file].isPaused\n    })\n\n    let inProgressFilesArray = []\n    inProgressFiles.forEach((file) => {\n      inProgressFilesArray.push(files[file])\n    })\n\n    let totalSize = 0\n    let totalUploadedSize = 0\n    inProgressFilesArray.forEach((file) => {\n      totalSize = totalSize + (file.progress.bytesTotal || 0)\n      totalUploadedSize = totalUploadedSize + (file.progress.bytesUploaded || 0)\n    })\n    totalSize = prettyBytes(totalSize)\n    totalUploadedSize = prettyBytes(totalUploadedSize)\n\n    const attachRenderFunctionToTarget = (target) => {\n      const plugin = this.uppy.getPlugin(target.id)\n      return Object.assign({}, target, {\n        icon: plugin.icon || this.opts.defaultTabIcon,\n        render: plugin.render\n      })\n    }\n\n    const isSupported = (target) => {\n      const plugin = this.uppy.getPlugin(target.id)\n      // If the plugin does not provide a `supported` check, assume the plugin works everywhere.\n      if (typeof plugin.isSupported !== 'function') {\n        return true\n      }\n      return plugin.isSupported()\n    }\n\n    const acquirers = pluginState.targets\n      .filter(target => target.type === 'acquirer' && isSupported(target))\n      .map(attachRenderFunctionToTarget)\n\n    const progressindicators = pluginState.targets\n      .filter(target => target.type === 'progressindicator')\n      .map(attachRenderFunctionToTarget)\n\n    const startUpload = (ev) => {\n      this.uppy.upload().catch((err) => {\n        // Log error.\n        this.uppy.log(err.stack || err.message || err)\n      })\n    }\n\n    const cancelUpload = (fileID) => {\n      this.uppy.emit('upload-cancel', fileID)\n      this.uppy.removeFile(fileID)\n    }\n\n    const saveFileCard = (meta, fileID) => {\n      this.uppy.setFileMeta(fileID, meta)\n      this.toggleFileCard()\n    }\n\n    return DashboardUI({\n      state: state,\n      modal: pluginState,\n      newFiles: newFiles,\n      files: files,\n      totalFileCount: Object.keys(files).length,\n      totalProgress: state.totalProgress,\n      acquirers: acquirers,\n      activePanel: pluginState.activePanel,\n      animateOpenClose: this.opts.animateOpenClose,\n      isClosing: pluginState.isClosing,\n      getPlugin: this.uppy.getPlugin,\n      progressindicators: progressindicators,\n      autoProceed: this.uppy.opts.autoProceed,\n      hideUploadButton: this.opts.hideUploadButton,\n      hideRetryButton: this.opts.hideRetryButton,\n      hidePauseResumeCancelButtons: this.opts.hidePauseResumeCancelButtons,\n      id: this.id,\n      closeModal: this.requestCloseModal,\n      handleClickOutside: this.handleClickOutside,\n      handleInputChange: this.handleInputChange,\n      handlePaste: this.handlePaste,\n      inline: this.opts.inline,\n      showPanel: this.showPanel,\n      hideAllPanels: this.hideAllPanels,\n      log: this.uppy.log,\n      i18n: this.i18n,\n      i18nArray: this.i18nArray,\n      addFile: this.uppy.addFile,\n      removeFile: this.uppy.removeFile,\n      info: this.uppy.info,\n      note: this.opts.note,\n      metaFields: pluginState.metaFields,\n      resumableUploads: capabilities.resumableUploads || false,\n      bundled: capabilities.bundled || false,\n      startUpload: startUpload,\n      pauseUpload: this.uppy.pauseResume,\n      retryUpload: this.uppy.retryUpload,\n      cancelUpload: cancelUpload,\n      fileCardFor: pluginState.fileCardFor,\n      toggleFileCard: this.toggleFileCard,\n      saveFileCard: saveFileCard,\n      updateDashboardElWidth: this.updateDashboardElWidth,\n      width: this.opts.width,\n      height: this.opts.height,\n      showLinkToFileUploadResult: this.opts.showLinkToFileUploadResult,\n      proudlyDisplayPoweredByUppy: this.opts.proudlyDisplayPoweredByUppy,\n      currentWidth: pluginState.containerWidth,\n      isWide: pluginState.containerWidth > 400,\n      isTargetDOMEl: this.isTargetDOMEl,\n      allowedFileTypes: this.uppy.opts.restrictions.allowedFileTypes,\n      maxNumberOfFiles: this.uppy.opts.restrictions.maxNumberOfFiles\n    })\n  }\n\n  discoverProviderPlugins () {\n    this.uppy.iteratePlugins((plugin) => {\n      if (plugin && !plugin.target && plugin.opts && plugin.opts.target === this.constructor) {\n        this.addTarget(plugin)\n      }\n    })\n  }\n\n  install () {\n    // Set default state for Dashboard\n    this.setPluginState({\n      isHidden: true,\n      showFileCard: false,\n      activePanel: false,\n      metaFields: this.opts.metaFields,\n      targets: []\n    })\n\n    const target = this.opts.target\n    if (target) {\n      this.mount(target, this)\n    }\n\n    const plugins = this.opts.plugins || []\n    plugins.forEach((pluginID) => {\n      const plugin = this.uppy.getPlugin(pluginID)\n      if (plugin) plugin.mount(this, plugin)\n    })\n\n    if (!this.opts.disableStatusBar) {\n      this.uppy.use(StatusBar, {\n        id: `${this.id}:StatusBar`,\n        target: this,\n        hideUploadButton: this.opts.hideUploadButton,\n        hideRetryButton: this.opts.hideRetryButton,\n        hidePauseResumeCancelButtons: this.opts.hidePauseResumeCancelButtons,\n        showProgressDetails: this.opts.showProgressDetails,\n        hideAfterFinish: this.opts.hideProgressAfterFinish,\n        locale: this.opts.locale\n      })\n    }\n\n    if (!this.opts.disableInformer) {\n      this.uppy.use(Informer, {\n        id: `${this.id}:Informer`,\n        target: this\n      })\n    }\n\n    if (!this.opts.disableThumbnailGenerator) {\n      this.uppy.use(ThumbnailGenerator, {\n        id: `${this.id}:ThumbnailGenerator`,\n        thumbnailWidth: this.opts.thumbnailWidth\n      })\n    }\n\n    this.discoverProviderPlugins()\n\n    this.initEvents()\n  }\n\n  uninstall () {\n    if (!this.opts.disableInformer) {\n      const informer = this.uppy.getPlugin(`${this.id}:Informer`)\n      // Checking if this plugin exists, in case it was removed by uppy-core\n      // before the Dashboard was.\n      if (informer) this.uppy.removePlugin(informer)\n    }\n\n    if (!this.opts.disableStatusBar) {\n      const statusBar = this.uppy.getPlugin(`${this.id}:StatusBar`)\n      if (statusBar) this.uppy.removePlugin(statusBar)\n    }\n\n    if (!this.opts.disableThumbnailGenerator) {\n      const thumbnail = this.uppy.getPlugin(`${this.id}:ThumbnailGenerator`)\n      if (thumbnail) this.uppy.removePlugin(thumbnail)\n    }\n\n    const plugins = this.opts.plugins || []\n    plugins.forEach((pluginID) => {\n      const plugin = this.uppy.getPlugin(pluginID)\n      if (plugin) plugin.unmount()\n    })\n\n    this.unmount()\n    this.removeEvents()\n  }\n}\n"]}