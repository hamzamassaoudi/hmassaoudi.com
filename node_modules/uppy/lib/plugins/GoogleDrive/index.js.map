{"version":3,"sources":["../../../src/plugins/GoogleDrive/index.js"],"names":["Plugin","require","Provider","ProviderView","h","module","exports","uppy","opts","type","id","title","icon","serverUrl","provider","authProvider","files","onAuth","bind","render","defaultOptions","serverPattern","install","view","setPluginState","authenticated","folders","directories","activeRow","filterInput","isSearchVisible","target","mount","uninstall","tearDown","unmount","getFolder","getUsername","data","items","item","userPermission","role","owners","owner","isAuthenticatedUser","emailAddress","isFolder","mimeType","getItemData","size","parseFloat","fileSize","getItemIcon","iconLink","getItemSubList","filter","i","startsWith","getItemName","getMimeType","getItemId","getItemRequestPath","getItemModifiedDate","modifiedByMeDate","getItemThumbnailUrl","GoogleDrive","state"],"mappings":"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","file":"index.js","sourcesContent":["const Plugin = require('../../core/Plugin')\nconst { Provider } = require('../../server')\nconst { ProviderView } = require('../../views')\nconst { h } = require('preact')\n\nmodule.exports = class GoogleDrive extends Plugin {\n  constructor (uppy, opts) {\n    super(uppy, opts)\n    this.type = 'acquirer'\n    this.id = this.opts.id || 'GoogleDrive'\n    this.title = 'Google Drive'\n    this.icon = () =>\n      <svg aria-hidden=\"true\" class=\"UppyIcon UppyModalTab-icon\" width=\"28\" height=\"28\" viewBox=\"0 0 16 16\">\n        <path d=\"M2.955 14.93l2.667-4.62H16l-2.667 4.62H2.955zm2.378-4.62l-2.666 4.62L0 10.31l5.19-8.99 2.666 4.62-2.523 4.37zm10.523-.25h-5.333l-5.19-8.99h5.334l5.19 8.99z\" />\n      </svg>\n\n    this[this.id] = new Provider(uppy, {\n      serverUrl: this.opts.serverUrl,\n      provider: 'drive',\n      authProvider: 'google'\n    })\n\n    this.files = []\n\n    this.onAuth = this.onAuth.bind(this)\n    this.render = this.render.bind(this)\n\n    // set default options\n    const defaultOptions = {}\n\n    // merge default options with the ones set by user\n    this.opts = Object.assign({}, defaultOptions, opts)\n    this.opts.serverPattern = opts.serverPattern || opts.serverUrl\n  }\n\n  install () {\n    this.view = new ProviderView(this)\n    // Set default state for Google Drive\n    this.setPluginState({\n      authenticated: false,\n      files: [],\n      folders: [],\n      directories: [],\n      activeRow: -1,\n      filterInput: '',\n      isSearchVisible: false\n    })\n\n    const target = this.opts.target\n    if (target) {\n      this.mount(target, this)\n    }\n  }\n\n  uninstall () {\n    this.view.tearDown()\n    this.unmount()\n  }\n\n  onAuth (authenticated) {\n    this.setPluginState({ authenticated })\n    if (authenticated) {\n      this.view.getFolder('root')\n    }\n  }\n\n  getUsername (data) {\n    for (const item of data.items) {\n      if (item.userPermission.role === 'owner') {\n        for (const owner of item.owners) {\n          if (owner.isAuthenticatedUser) {\n            return owner.emailAddress\n          }\n        }\n      }\n    }\n  }\n\n  isFolder (item) {\n    return item.mimeType === 'application/vnd.google-apps.folder'\n  }\n\n  getItemData (item) {\n    return Object.assign({}, item, {size: parseFloat(item.fileSize)})\n  }\n\n  getItemIcon (item) {\n    return <img src={item.iconLink} />\n  }\n\n  getItemSubList (item) {\n    return item.items.filter((i) => {\n      return this.isFolder(i) || !i.mimeType.startsWith('application/vnd.google')\n    })\n  }\n\n  getItemName (item) {\n    return item.title ? item.title : '/'\n  }\n\n  getMimeType (item) {\n    return item.mimeType\n  }\n\n  getItemId (item) {\n    return item.id\n  }\n\n  getItemRequestPath (item) {\n    return this.getItemId(item)\n  }\n\n  getItemModifiedDate (item) {\n    return item.modifiedByMeDate\n  }\n\n  getItemThumbnailUrl (item) {\n    return `${this.opts.serverUrl}/${this.GoogleDrive.id}/thumbnail/${this.getItemRequestPath(item)}`\n  }\n\n  render (state) {\n    return this.view.render(state)\n  }\n}\n"]}