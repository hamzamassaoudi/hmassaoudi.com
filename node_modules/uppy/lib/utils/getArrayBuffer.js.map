{"version":3,"sources":["../../src/utils/getArrayBuffer.js"],"names":["module","exports","getArrayBuffer","chunk","resolve","reject","reader","FileReader","addEventListener","e","target","result","err","console","error","readAsArrayBuffer"],"mappings":";;AAAAA,OAAOC,OAAP,GAAiB,SAASC,cAAT,CAAyBC,KAAzB,EAAgC;AAC/C,SAAO,aAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC5C,QAAIC,SAAS,IAAIC,UAAJ,EAAb;AACAD,WAAOE,gBAAP,CAAwB,MAAxB,EAAgC,UAAUC,CAAV,EAAa;AAC3C;AACAL,cAAQK,EAAEC,MAAF,CAASC,MAAjB;AACD,KAHD;AAIAL,WAAOE,gBAAP,CAAwB,OAAxB,EAAiC,UAAUI,GAAV,EAAe;AAC9CC,cAAQC,KAAR,CAAc,qBAAqBF,GAAnC;AACAP,aAAOO,GAAP;AACD,KAHD;AAIA;AACAN,WAAOS,iBAAP,CAAyBZ,KAAzB;AACD,GAZM,CAAP;AAaD,CAdD","file":"getArrayBuffer.js","sourcesContent":["module.exports = function getArrayBuffer (chunk) {\n  return new Promise(function (resolve, reject) {\n    var reader = new FileReader()\n    reader.addEventListener('load', function (e) {\n      // e.target.result is an ArrayBuffer\n      resolve(e.target.result)\n    })\n    reader.addEventListener('error', function (err) {\n      console.error('FileReader error' + err)\n      reject(err)\n    })\n    // file-type only needs the first 4100 bytes\n    reader.readAsArrayBuffer(chunk)\n  })\n}\n"]}